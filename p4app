#!/usr/bin/env bash
# Copyright 2013-present Barefoot Networks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

P4APP_IMAGE=p4lang/p4app:latest

function run-p4app {
  APP_TO_RUN=/tmp/app.tar.gz
  docker run --privileged --interactive --tty --rm \
            -v $1:$APP_TO_RUN \
            -v /tmp/p4app_logs:/tmp/p4app_logs \
             $P4APP_IMAGE $APP_TO_RUN "${@:2}"
}

function run-command {
  # Run the .p4app package provided by the user.
  if [ -d "$1" ]; then
    # The user passed the package as a directory. Tar it up and pass it to the
    # container.
    APP_FILE=$(mktemp /tmp/p4app.tar.gz.XXXXXX)
    tar -czf "$APP_FILE" -C "$1" .
    run-p4app "$APP_FILE" "${@:2}"
    rc=$?
    rm "$APP_FILE"
  elif [ -f "$1" ]; then
    # The user passed the package as a file. We'll assume it's already a .tar.gz
    # archive; just pass it to the container as-is.
    run-p4app "$1" "${@:2}"
    rc=$?
  else
    echo "Couldn't read p4app package: $1"
    exit 1
  fi
  exit $rc
}

function update-command {
  docker pull $P4APP_IMAGE
}

function usage-command {
  echo "Usage:"
  echo "  p4app run <program.p4app>"
  echo "      Run a p4app."
  echo "  p4app run <program.p4app> <target>"
  echo "      Run a p4app, specifying a target."
  echo "  p4app update"
  echo "      Update the toolchain to the newest version."
  exit 1
}

case "$1" in
  "run")
    run-command "${@:2}"
    ;;
  "update")
    update-command "${@:2}"
    ;;
  *)
    usage-command
    ;;
esac
